name: Ngrok VPS Setup

on: 
  push:
    branches:
      - main

jobs:
  setup-vps:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      
      - name: Set up Ngrok VPS
        env:
          NGROK_API_TOKEN: 2iscdz2Zuifmf1UO21OSSxEksMf_5RTq4Pih9xyfAN9EwmLHr
          VPS_NAME: tomi
          VPS_PASSWORD: '@D4g88out5d'
        run: |
          # Install ngrok
          curl -s https://ngrok-agent.s3.amazonaws.com/ngrok.asc | sudo tee /etc/apt/trusted.gpg.d/ngrok.asc > /dev/null
          echo "deb https://ngrok-agent.s3.amazonaws.com buster main" | sudo tee /etc/apt/sources.list.d/ngrok.list
          sudo apt update && sudo apt install ngrok

          # Configure ngrok authtoken
          ngrok config add-authtoken $NGROK_API_TOKEN

          # Create and configure a new tunnel
          RESPONSE=$(curl -s -X POST \
            -H "Content-Type: application/json" \
            -H "Authorization: Bearer $NGROK_API_TOKEN" \
            -d '{
              "name": "'$VPS_NAME'",
              "addr": "80",
              "proto": "http",
              "inspect": false
            }' https://api.ngrok.com/tunnels)

          # Extract public URL
          PUBLIC_URL=$(echo $RESPONSE | jq -r .public_url)
          echo "Public URL: $PUBLIC_URL"

          # Display tunnel information
          echo $RESPONSE | jq

          # Save tunnel info
          echo "VPS Name: $VPS_NAME" >> vps_info.txt
          echo "VPS Password: $VPS_PASSWORD" >> vps_info.txt
          echo "Public URL: $PUBLIC_URL" >> vps_info.txt
          
          # Optionally, you can add additional steps to utilize the VPS info as needed

      - name: Upload VPS info as artifact
        uses: actions/upload-artifact@v2
        with:
          name: vps-info
          path: vps_info.txt
